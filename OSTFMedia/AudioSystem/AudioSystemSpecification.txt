<New media player>
MediaPlayerType = PaBased // must be either PaBased or AudioTrackBased (PaBased = PortAudio based OSTF sound player, AudioTrackBased = Android AudioTrack based sound player)

<AudioDevices>
// ApiName is only relevant on Windows platforms and is ignored on Android
ApiName = MME // "MME", "Windows DirectSound", "Windows WASAPI", "ASIO" // N.B. ASIO is not supported in all editions

// OutputDevices is only relevant with the MME API on Windows, for Android use OutputDevice instead
OutputDevices = Högtalare (2- AudioBox USB), Högtalare (Realtek(R) Audio) // Högtalare (AudioQuest DragonFly // Högtalare (Realtek(R) Audio) // Högtalare (RME Fireface UCX), Analog (3+4) (RME Fireface UCX), Analog (5+6) (RME Fireface UCX) //Högtalare (AudioQuest DragonFly // Högtalare (iFi USB Audio SE)
//OutputDevice = USB-Audio - AudioQuest DragonFly Black v1.5+UsbHeadset

//OutputDevices = 1-2 (OCTA-CAPTURE), 3-4 (OCTA-CAPTURE), 5-6 (OCTA-CAPTURE), 7-8 (OCTA-CAPTURE), // Högtalare/Hörlurar (Realtek(R) 

// InputDevices is only relevant with the MME API on Windows, for Android use InputDevice instead
InputDevices = //1-2 (OCTA-CAPTURE)

//OutputDevice = // 1-2 (OCTA-CAPTURE) // Högtalare/Hörlurar (Realtek(R) 
InputDevice = // 1-2 (OCTA-CAPTURE)  // Mikrofonuppsättning (Intel® Sma

BufferSize = 1024 // Must be powers of 2

AllowDefaultOutputDevice = True // Value must be True or False. If True, OSTF is allowed to select the default audio output device/s. If set to False, OSTF will close the application if the the intended audio output device/s is not present on the system.
AllowDefaultInputDevice = True // Value must be True or False. If True, OSTF is allowed to select the default audio input device/s. If set to False, OSTF will close the application if the the intended audio output device/s is not present on the system.

<New transducer>
Name = Loudspeakers (front/back)
LoudspeakerAzimuths = 0, 180 // Should indicate the actual physical azimuth angle between each loudspeaker and the frontal angle at the listener's position (in degrees)
LoudspeakerElevations = 0, 0 // Should indicate the actual physical elevation angle between each loudspeaker and the horizon at the listener's position (in degrees)
LoudspeakerDistances = 1.45, 1.45 // Should indicate the actual physical distance from the loudspeakers to the listener (in meters)
HardwareOutputChannels = 1, 2 // If head phones are used, these should be connected to the first two channels specified
CalibrationGain = 0, 0 //Sets the calibration gain applied to the speaker connected to each of the indicated HardwareOutputChannels during playback (so that a signal of 0 dBFS = 100 dBPSL). The hardware channels values should be comma separated, and dots (.) should be used as decimal mark.
HostVolumeOutputLevel = 100 // The host volume level (for the selected API) in percentages (0-100). If possible, this value will be used to set and maintain the volume of the selected output sound unit during speech tests.
PtaCalibrationGainFrequencies = 125, 250, 500, 750, 1000, 1500, 2000, 3000, 4000, 6000, 8000 //Available values for DD65v2:  125, 160, 200, 250, 315, 400, 500, 630, 750, 800, 1000, 1250, 1500, 1600, 2000, 2500, 3000, 3150, 4000, 5000, 6000, 6300, 8000
PtaCalibrationGainValues = 0,0,0,0,0,0,0,0,0,0,0 
RETSPL_Speech = 0
LimiterThreshold = 100  // (dB SPL) Leave empty to disable limiter

<New transducer>
Name = Headphones (DD65v2)
LoudspeakerAzimuths = -90, 90 // Should indicate the actual physical azimuth angle between each loudspeaker and the frontal angle at the listener's position (in degrees)
LoudspeakerElevations = 0, 0 // Should indicate the actual physical elevation angle between each loudspeaker and the horizon at the listener's position (in degrees)
LoudspeakerDistances = 0, 0 // Should indicate the actual physical distance from the loudspeakers to the listener (in meters)
HardwareOutputChannels = 1, 2
CalibrationGain = 0, 0 //Sets the calibration gain applied to the speaker connected to each of the indicated HardwareOutputChannels during playback (so that a signal of 0 dBFS = 100 dBPSL). The hardware channels values should be comma separated, and dots (.) should be used as decimal mark.
HostVolumeOutputLevel = 100 // The host volume level (for the selected API) in percentages (0-100). If possible, this value will be used to set and maintain the volume of the selected output sound unit during speech tests.
PtaCalibrationGainFrequencies = 125, 250, 500, 750, 1000, 1500, 2000, 3000, 4000, 6000, 8000 //Available values for DD65v2:  125, 160, 200, 250, 315, 400, 500, 630, 750, 800, 1000, 1250, 1500, 1600, 2000, 2500, 3000, 3150, 4000, 5000, 6000, 6300, 8000
PtaCalibrationGainValues = 0,0,0,0,0,0,0,0,0,0,0 
RETSPL_Speech = 17 
LimiterThreshold = 117  // (dB SPL) Leave empty to disable limiter // (Using 100 dB SPL + RETSPL of 17 dB) which will give a limiter threshold of 100 dB HL.

<New transducer>
Name = Loudspeakers (front/back/snodd)
LoudspeakerAzimuths = 0, 180, 135 // Should indicate the actual physical azimuth angle between each loudspeaker and the frontal angle at the listener's position (in degrees)
LoudspeakerElevations = 0, 0, 0 // Should indicate the actual physical elevation angle between each loudspeaker and the horizon at the listener's position (in degrees)
LoudspeakerDistances = 1.45, 1.45, 1.45 // Should indicate the actual physical distance from the loudspeakers to the listener (in meters)
HardwareOutputChannels = 1, 2, 3 // If head phones are used, these should be connected to the first two channels specified
CalibrationGain = 0, 0, 0 //Sets the calibration gain applied to the speaker connected to each of the indicated HardwareOutputChannels during playback (so that a signal of 0 dBFS = 100 dBPSL). The hardware channels values should be comma separated, and dots (.) should be used as decimal mark.
HostVolumeOutputLevel = 100 // The host volume level (for the selected API) in percentages (0-100). If possible, this value will be used to set and maintain the volume of the selected output sound unit during speech tests.
PtaCalibrationGainFrequencies = 125, 250, 500, 750, 1000, 1500, 2000, 3000, 4000, 6000, 8000 //Available values for DD65v2:  125, 160, 200, 250, 315, 400, 500, 630, 750, 800, 1000, 1250, 1500, 1600, 2000, 2500, 3000, 3150, 4000, 5000, 6000, 6300, 8000
PtaCalibrationGainValues = 0,0,0,0,0,0,0,0,0,0,0 
RETSPL_Speech = 0
LimiterThreshold = 100  // (dB SPL) Leave empty to disable limiter

<New transducer>
Name = 3 speaker array
LoudspeakerAzimuths = -30, 0, 30 // Should indicate the actual physical azimuth angle between each loudspeaker and the frontal angle at the listener's position (in degrees)
LoudspeakerElevations = 0,0,0 // Should indicate the actual physical elevation angle between each loudspeaker and the horizon at the listener's position (in degrees)
LoudspeakerDistances = 0,0,0 // Should indicate the actual physical distance from the loudspeakers to the listener (in meters)
HardwareOutputChannels = 1, 2, 3
CalibrationGain = 0, 0, 0 //Sets the calibration gain applied to the speaker connected to each of the indicated HardwareOutputChannels during playback (so that a signal of 0 dBFS = 100 dBPSL). The hardware channels values should be comma separated, and dots (.) should be used as decimal mark.
HostVolumeOutputLevel = 100 // The host volume level (for the selected API) in percentages (0-100). If possible, this value will be used to set and maintain the volume of the selected output sound unit during speech tests.
LimiterThreshold = 100  // (dB SPL) Leave empty to disable limiter

<New transducer>
Name = 5 speaker array
LoudspeakerAzimuths = 0, 30, 120, -120, -30 // Should indicate the actual physical azimuth angle between each loudspeaker and the frontal angle at the listener's position (in degrees)
LoudspeakerElevations = 0,0,0,0,0 // Should indicate the actual physical elevation angle between each loudspeaker and the horizon at the listener's position (in degrees)
LoudspeakerDistances = 0,0,0,0,0 // Should indicate the actual physical distance from the loudspeakers to the listener (in meters)
HardwareOutputChannels = 1, 2, 3, 4, 5
CalibrationGain = 0, 0, 0, 0, 0 //Sets the calibration gain applied to the speaker connected to each of the indicated HardwareOutputChannels during playback (so that a signal of 0 dBFS = 100 dBPSL). The hardware channels values should be comma separated, and dots (.) should be used as decimal mark.
HostVolumeOutputLevel = 100 // The host volume level (for the selected API) in percentages (0-100). If possible, this value will be used to set and maintain the volume of the selected output sound unit during speech tests.
LimiterThreshold = 100  // (dB SPL) Leave empty to disable limiter

<New transducer>
Name = 8 speaker array
LoudspeakerAzimuths = 0, 45, 90, 135, 180, -135, -90, -45 // Should indicate the actual physical azimuth angle between each loudspeaker and the frontal angle at the listener's position (in degrees)
LoudspeakerElevations = 0,0,0,0,0,0,0,0 // Should indicate the actual physical elevation angle between each loudspeaker and the horizon at the listener's position (in degrees)
LoudspeakerDistances = 0,0,0,0,0,0,0,0 // Should indicate the actual physical distance from the loudspeakers to the listener (in meters)
HardwareOutputChannels = 1, 2, 3, 4, 5, 6, 7, 8
CalibrationGain = 0, 0, 0, 0, 0, 0, 0, 0 //Sets the calibration gain applied to the speaker connected to each of the indicated HardwareOutputChannels during playback (so that a signal of 0 dBFS = 100 dBPSL). The hardware channels values should be comma separated, and dots (.) should be used as decimal mark.
HostVolumeOutputLevel = 100 // The host volume level (for the selected API) in percentages (0-100). If possible, this value will be used to set and maintain the volume of the selected output sound unit during speech tests.
LimiterThreshold = 100  // (dB SPL) Leave empty to disable limiter

<New transducer>
Name = 12 speaker array
LoudspeakerAzimuths = 0, 30, 60, 90, 120, 150, 180, -150, -120, -90, -60, -30 // Should indicate the actual physical azimuth angle between each loudspeaker and the frontal angle at the listener's position (in degrees)
LoudspeakerElevations = 0,0,0,0,0,0,0,0,0,0,0,0 // Should indicate the actual physical elevation angle between each loudspeaker and the horizon at the listener's position (in degrees)
LoudspeakerDistances = 0,0,0,0,0,0,0,0,0,0,0,0 // Should indicate the actual physical distance from the loudspeakers to the listener (in meters)
HardwareOutputChannels = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
CalibrationGain = 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 //Sets the calibration gain applied to the speaker connected to each of the indicated HardwareOutputChannels during playback (so that a signal of 0 dBFS = 100 dBPSL). The hardware channels values should be comma separated, and dots (.) should be used as decimal mark.
HostVolumeOutputLevel = 100 // The host volume level (for the selected API) in percentages (0-100). If possible, this value will be used to set and maintain the volume of the selected output sound unit during speech tests.
LimiterThreshold = 100  // (dB SPL) Leave empty to disable limiter


<New media player>
MediaPlayerType = AudioTrackBased // must be either PaBased or AudioTrackBased (PaBased = PortAudio based OSTF sound player, AudioTrackBased = Android AudioTrack based sound player)

<AudioDevices>
// ApiName is only relevant on Windows platforms and is ignored on Android
// ApiName = MME // "MME", "Windows DirectSound", "Windows WASAPI", "ASIO" // N.B. ASIO is not supported in all editions

// OutputDevices is only relevant with the MME API on Windows, for Android use OutputDevice instead
// OutputDevices = Högtalare (AudioQuest DragonFly // Högtalare (Realtek(R) Audio) // Högtalare (RME Fireface UCX), Analog (3+4) (RME Fireface UCX), Analog (5+6) (RME Fireface UCX) //Högtalare (AudioQuest DragonFly // Högtalare (iFi USB Audio SE)
// OutputDevices = 1-2 (OCTA-CAPTURE), 3-4 (OCTA-CAPTURE), 5-6 (OCTA-CAPTURE), 7-8 (OCTA-CAPTURE), // Högtalare/Hörlurar (Realtek(R) 
// InputDevices is only relevant with the MME API on Windows, for Android use InputDevice instead
// InputDevices = //1-2 (OCTA-CAPTURE)

OutputDevice = USB-Audio - AudioQuest DragonFly Black v1.5 // TB328FU 
InputDevice = TB328FU+WiredHeadset // Device name + Device type

BufferSize = 1024 // Must be powers of 2

AllowDefaultOutputDevice = True // Value must be True or False. If True, OSTF is allowed to select the default audio output device/s. If set to False, OSTF will close the application if the the intended audio output device/s is not present on the system.
AllowDefaultInputDevice = True // Value must be True or False. If True, OSTF is allowed to select the default audio input device/s. If set to False, OSTF will close the application if the the intended audio output device/s is not present on the system.

<New transducer>
Name = Headphones  (DD65v2)
LoudspeakerAzimuths = -90, 90 // Should indicate the actual physical azimuth angle between each loudspeaker and the frontal angle at the listener's position (in degrees)
LoudspeakerElevations = 0, 0 // Should indicate the actual physical elevation angle between each loudspeaker and the horizon at the listener's position (in degrees)
LoudspeakerDistances = 0, 0 // Should indicate the actual physical distance from the loudspeakers to the listener (in meters)
HardwareOutputChannels = 1, 2
CalibrationGain = 0, 0 //Sets the calibration gain applied to the speaker connected to each of the indicated HardwareOutputChannels during playback (so that a signal of 0 dBFS = 100 dBPSL). The hardware channels values should be comma separated, and dots (.) should be used as decimal mark.
HostVolumeOutputLevel = 70 // The host volume level (for the selected API) in percentages (0-100). If possible, this value will be used to set and maintain the volume of the selected output sound unit during speech tests.
PtaCalibrationGainFrequencies = 125, 250, 500, 750, 1000, 1500, 2000, 3000, 4000, 6000, 8000 //Available values for DD65v2:  125, 160, 200, 250, 315, 400, 500, 630, 750, 800, 1000, 1250, 1500, 1600, 2000, 2500, 3000, 3150, 4000, 5000, 6000, 6300, 8000
PtaCalibrationGainValues = 0,0,0,0,0,0,0,0,0,0,0 
RETSPL_Speech = 17 
LimiterThreshold = 117  // (dB SPL) Leave empty to disable limiter // (Using 100 dB SPL + RETSPL of 17 dB) which will give a limiter threshold of 100 dB HL.

<New transducer>
Name = Loudspeakers (front/back)
LoudspeakerAzimuths = 0, 180 // Should indicate the actual physical azimuth angle between each loudspeaker and the frontal angle at the listener's position (in degrees)
LoudspeakerElevations = 0, 0 // Should indicate the actual physical elevation angle between each loudspeaker and the horizon at the listener's position (in degrees)
LoudspeakerDistances = 1.45, 1.45 // Should indicate the actual physical distance from the loudspeakers to the listener (in meters)
HardwareOutputChannels = 1, 2 // If head phones are used, these should be connected to the first two channels specified
CalibrationGain = 0, 0 //Sets the calibration gain applied to the speaker connected to each of the indicated HardwareOutputChannels during playback (so that a signal of 0 dBFS = 100 dBPSL). The hardware channels values should be comma separated, and dots (.) should be used as decimal mark.
HostVolumeOutputLevel = 70 // The host volume level (for the selected API) in percentages (0-100). If possible, this value will be used to set and maintain the volume of the selected output sound unit during speech tests.
PtaCalibrationGainFrequencies = 125, 250, 500, 750, 1000, 1500, 2000, 3000, 4000, 6000, 8000 //Available values for DD65v2:  125, 160, 200, 250, 315, 400, 500, 630, 750, 800, 1000, 1250, 1500, 1600, 2000, 2500, 3000, 3150, 4000, 5000, 6000, 6300, 8000
PtaCalibrationGainValues = 0,0,0,0,0,0,0,0,0,0,0 
RETSPL_Speech = 0
LimiterThreshold = 100  // (dB SPL) Leave empty to disable limiter