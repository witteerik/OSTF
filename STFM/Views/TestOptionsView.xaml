<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:STFN;assembly=STFN"
             xmlns:drawable="clr-namespace:STFM.Views"
             x:Class="STFM.Views.OptionsViewAll"
             x:DataType="local:TestOptions">
        
    <ContentView.BindingContext>
        <local:TestOptions />
    </ContentView.BindingContext>

    <ScrollView VerticalOptions="FillAndExpand" >

        <VerticalStackLayout x:Name="MainStackLayout" Padding="10, 5, 10, 5">

            <Button x:Name="ShowTesterInstructionsButton" Text="{Binding TesterInstructionsButtonText}" Clicked="ShowTesterInstructionsButton_Clicked" HorizontalOptions="FillAndExpand" Margin="0,2,1,1"></Button>
            <Button x:Name="ShowParticipantInstructionsButton" Text="{Binding ParticipantInstructionsButtonText}" Clicked="ShowParticipantInstructionsButton_Clicked" HorizontalOptions="FillAndExpand" Margin="1,1,0,10"></Button>

            <Frame x:Name="SpeechMaterialSelectionControl" BackgroundColor="WhiteSmoke"  BorderColor="Black" Padding="10,5,10,5" Margin="0,5,0,15">
                <VerticalStackLayout Margin="0,0,0,0" Padding="0,0,0,0">
                    <HorizontalStackLayout>
                        <Label Text="{Binding SelectSpeechMaterialTitle}" VerticalOptions="Center" Margin="0,0,10,0" />
                        <Picker x:Name="SpeechMaterial_Picker" Title="{Binding SelectSpeechMaterialTitle}" ItemsSource="{Binding SelectedTest.AvailableSpeechMaterialSpecifications}" SelectedItem="{Binding SelectedSpeechMaterial}" HorizontalTextAlignment="Center"  WidthRequest="200" Margin="5,0,0,0" />
                    </HorizontalStackLayout>
                </VerticalStackLayout>
            </Frame>

            <Picker x:Name="SelectedTransducer_Picker" SelectedIndexChanged="SelectedTransducer_Picker_SelectedIndexChanged"  Title="{Binding SelectedTransducerTitle}" ItemsSource="{Binding SelectedTest.CurrentlySupportedTransducers}" SelectedItem="{Binding SelectedTransducer}" MinimumWidthRequest="160" HorizontalOptions="Start" Margin="0,10,0,10"/>

            <HorizontalStackLayout x:Name="UseRetsplCorrectionControl">
                <Label Text="{Binding UseRetsplCorrectionTitle}" VerticalOptions="Center" WidthRequest="170" Margin="0,5,0,5" />
                <Switch x:Name="UseRetsplCorrection_Switch" IsToggled="{Binding UseRetsplCorrection}" VerticalOptions="Center" Margin="0,5,0,5" />
            </HorizontalStackLayout>

            <HorizontalStackLayout x:Name="PractiseTestControl">
                <Label Text="{Binding IsPractiseTestTitle}" VerticalOptions="Center" WidthRequest="170" Margin="0,5,0,5"/>
                <Switch IsToggled="{Binding IsPractiseTest}" VerticalOptions="Center" Margin="0,5,0,5" />
            </HorizontalStackLayout>

            <Picker x:Name="SelectedPreset_Picker" Title="{Binding SelectedPresetTitle}" ItemsSource="{Binding SelectedTest.AvailablePresets}" SelectedItem="{Binding SelectedPreset}" MinimumWidthRequest="160" HorizontalOptions="Start" Margin="0,10,0,10" />

            <Frame x:Name="ExperimentNumberControl" BackgroundColor="WhiteSmoke"  BorderColor="Black" Padding="10,5,10,5" Margin="0,5,0,15">
                <VerticalStackLayout Margin="0,0,0,0" Padding="0,0,0,0">
                    <HorizontalStackLayout>
                        <Label Text="{Binding ExperimentNumberTitle}" VerticalOptions="Center" Margin="0,0,10,0" />
                        <Picker x:Name="ExperimentNumber_Picker" Title="{Binding ExperimentNumberTitle}" ItemsSource="{Binding SelectedTest.AvailableExperimentNumbers}" SelectedItem="{Binding ExperimentNumber}" HorizontalTextAlignment="Center"  WidthRequest="200" Margin="5,0,0,0" />
                    </HorizontalStackLayout>
                </VerticalStackLayout>
            </Frame>
            
            <Picker x:Name="StartList_Picker" Title="{Binding StartListTitle}" ItemsSource="{Binding SelectedTest.AvailableTestListsNames}" SelectedItem="{Binding StartList}" MinimumWidthRequest="160" HorizontalOptions="Start" Margin="0,10,0,10" />

            <Picker x:Name="SelectedMediaSet_Picker" Title="{Binding SelectedMediaSetTitle}" ItemsSource="{Binding SelectedTest.AvailableMediasets}" SelectedItem="{Binding SelectedMediaSet}" MinimumWidthRequest="160" HorizontalOptions="Start" Margin="0,10,0,10" />

            <!--Skipping MediaSets (i.e. selecting multiple media sets) for now-->

            <Picker x:Name="AvailableTestModes_Picker" SelectedIndexChanged="AvailableTestModes_Picker_SelectedIndexChanged" Title="{Binding SelectedTestModeTitle}" ItemsSource="{Binding SelectedTest.AvailableTestModes}" SelectedItem="{Binding SelectedTestMode}" MinimumWidthRequest="160" HorizontalOptions="Start" Margin="0,10,0,10"/>

            <Picker x:Name="AvailableTestProtocols_Picker" Title="{Binding SelectedTestProtocolTitle}" ItemsSource="{Binding SelectedTest.AvailableTestProtocols}" SelectedItem="{Binding SelectedTestProtocol}" MinimumWidthRequest="160" HorizontalOptions="Start" Margin="0,10,0,10"/>

            <HorizontalStackLayout x:Name="KeyWordScoringControl">
                <Label Text="{Binding ScoreOnlyKeyWordsTitle}" VerticalOptions="Center" WidthRequest="170" Margin="0,5,0,5" />
                <Switch x:Name="KeyWords_Switch" IsToggled="{Binding ScoreOnlyKeyWords}" VerticalOptions="Center" Margin="0,5,0,5" />
            </HorizontalStackLayout>

            <HorizontalStackLayout x:Name="ListOrderRandomizationControl">
                <Label Text="{Binding RandomizeListOrderTitle}" VerticalOptions="Center" WidthRequest="170" Margin="0,5,0,5" />
                <Switch x:Name="ListOrderRandomization_Switch" IsToggled="{Binding RandomizeListOrder}" VerticalOptions="Center" Margin="0,5,0,5" />
            </HorizontalStackLayout>

            <HorizontalStackLayout x:Name="WithinListRandomizationControl">
                <Label Text="{Binding RandomizeItemsWithinListsTitle}" VerticalOptions="Center" WidthRequest="170" Margin="0,5,0,5" />
                <Switch x:Name="WithinListRandomization_Switch" IsToggled="{Binding RandomizeItemsWithinLists}" VerticalOptions="Center" Margin="0,5,0,5" />
            </HorizontalStackLayout>

            <HorizontalStackLayout x:Name="AcrossListRandomizationControl">
                <Label Text="{Binding RandomizeItemsAcrossListsTitle}" VerticalOptions="Center" WidthRequest="170" Margin="0,5,0,5" />
                <Switch x:Name="AcrossListRandomization_Switch" IsToggled="{Binding RandomizeItemsAcrossLists}" VerticalOptions="Center" Margin="0,5,0,5" />
            </HorizontalStackLayout>

            <HorizontalStackLayout x:Name="UseFreeRecallControl">
                <Label Text="{Binding IsFreeRecallTitle}" VerticalOptions="Center" WidthRequest="170" Margin="0,5,0,5" />
                <Switch x:Name="UseFreeRecall_Switch" Toggled="UseFreeRecall_Switch_Toggled" IsToggled="{Binding IsFreeRecall}" VerticalOptions="Center" Margin="0,5,0,5" />
            </HorizontalStackLayout>

            <HorizontalStackLayout x:Name="UseDidNotHearAlternativeControl">
                <Label Text="{Binding ShowDidNotHearResponseAlternativeTitle}" VerticalOptions="Center" WidthRequest="170" Margin="0,5,0,5" />
                <Switch x:Name="UseDidNotHearAlternative_Switch" IsToggled="{Binding ShowDidNotHearResponseAlternative}" VerticalOptions="Center" Margin="0,5,0,5"/>
            </HorizontalStackLayout>

            <Picker x:Name="AvailableFixedResponseAlternativeCounts_Picker" Title="{Binding FixedResponseAlternativeCountTitle}" ItemsSource="{Binding SelectedTest.AvailableFixedResponseAlternativeCounts}" SelectedItem="{Binding FixedResponseAlternativeCount}" MinimumWidthRequest="160" HorizontalOptions="Start" Margin="0,10,0,10"/>


            <HorizontalStackLayout x:Name="UseSimulatedSoundFieldControl">
                <Label x:Name="UseSimulatedSoundField_Label" Text="{Binding UseSimulatedSoundFieldTitle}" VerticalOptions="Center" WidthRequest="170" Margin="0,5,0,5" />
                <Switch x:Name="UseSimulatedSoundField_Switch" IsToggled="{Binding UseSimulatedSoundField}" Toggled="UseSimulatedSoundField_Switch_Toggled" VerticalOptions="Center" Margin="0,5,0,5" />
            </HorizontalStackLayout>

            <Picker x:Name="SelectedIrSet_Picker" SelectedIndexChanged="SelectedIrSet_Picker_SelectedIndexChanged" Title="{Binding SelectedIrSetTitle}" ItemsSource="{Binding SelectedTest.CurrentlySupportedIrSets}" SelectedItem="{Binding SelectedIrSet}" MinimumWidthRequest="160" HorizontalOptions="Start" Margin="0,10,0,10"/>

            <!--<Picker x:Name="SelectedPresentationMode_Picker"  Title="{Binding SelectedPresentationModeTitle}" ItemsSource="{Binding SelectedTest.AvailablePresentationModes}" SelectedItem="{Binding SelectedPresentationMode}" MinimumWidthRequest="160" HorizontalOptions="Start" Margin="0,10,0,10"/>-->

            <drawable:HorizontalSoundSourceView x:Name="SpeechSoundSourceView" RoleType ="Target" Title="{Binding SignalLocationsTitle}" MaxSelected ="{Binding SelectedTest.MaximumSoundFieldSpeechLocations}" MinSelected ="{Binding SelectedTest.MinimumSoundFieldSpeechLocations}" IsSoundFieldSimulation="{Binding UseSimulatedSoundField}"  SoundSources="{Binding SignalLocationCandidates}" Margin="0,0,0,5" ></drawable:HorizontalSoundSourceView>
            <drawable:HorizontalSoundSourceView x:Name="MaskerSoundSourceView" RoleType ="Masker" Title="{Binding MaskerLocationsTitle}" MaxSelected ="{Binding SelectedTest.MaximumSoundFieldMaskerLocations}" MinSelected ="{Binding SelectedTest.MinimumSoundFieldMaskerLocations}" IsSoundFieldSimulation="{Binding UseSimulatedSoundField}" SoundSources="{Binding MaskerLocationCandidates}" Margin="0,0,0,5" ></drawable:HorizontalSoundSourceView>
            <drawable:HorizontalSoundSourceView x:Name="BackgroundNonSpeechSoundSourceView" RoleType ="BackgroundNonspeech" Title="{Binding BackgroundNonSpeechLocationsTitle}" MaxSelected ="{Binding SelectedTest.MaximumSoundFieldBackgroundNonSpeechLocations}" MinSelected ="{Binding SelectedTest.MinimumSoundFieldBackgroundNonSpeechLocations}" IsSoundFieldSimulation="{Binding UseSimulatedSoundField}" SoundSources="{Binding BackgroundNonSpeechLocationCandidates}" Margin="0,0,0,5" ></drawable:HorizontalSoundSourceView>
            <drawable:HorizontalSoundSourceView x:Name="BackgroundSpeechSoundSourceView" RoleType ="BackgroundSpeech" Title="{Binding BackgroundSpeechLocationsTitle}" MaxSelected ="{Binding SelectedTest.MaximumSoundFieldBackgroundSpeechLocations}" MinSelected ="{Binding SelectedTest.MinimumSoundFieldBackgroundSpeechLocations}" IsSoundFieldSimulation="{Binding UseSimulatedSoundField}" SoundSources="{Binding BackgroundSpeechLocationCandidates}" Margin="0,0,0,5" ></drawable:HorizontalSoundSourceView>

            <VerticalStackLayout x:Name="ReferenceLevelControl">
                <Label HorizontalOptions="Center" Margin="0,5,0,0">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding ReferenceLevelTitle}" />
                            <Span Text="{Binding ReferenceLevel, StringFormat=' = {0:F0}'}" />
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <Slider Value="{Binding ReferenceLevel}" Margin="10,0,10,5" Maximum="{Binding SelectedTest.MaximumLevel}" Minimum="{Binding SelectedTest.MinimumLevel}" MinimumTrackColor="DarkSlateGrey" ThumbColor="DarkSlateGrey"/>
            </VerticalStackLayout>

            <VerticalStackLayout x:Name="SpeechLevelControl">
                <Label HorizontalOptions="Center" Margin="0,5,0,0">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding SpeechLevelTitle}" />
                            <Span Text="{Binding SpeechLevel, StringFormat=' = {0:F0}'}" />
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <Slider x:Name="SpeechLevelSlider" Value="{Binding SpeechLevel}" ValueChanged="SpeechLevelSlider_ValueChanged" Margin="10,0,10,5" Maximum="{Binding SelectedTest.MaximumLevel}" Minimum="{Binding SelectedTest.MinimumLevel}" MinimumTrackColor="LightGreen" ThumbColor="LightGreen"/>
            </VerticalStackLayout>

            <VerticalStackLayout x:Name="MaskerLevelControl">
                <Label HorizontalOptions="Center" Margin="0,5,0,0">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding MaskingLevelTitle}" />
                            <Span Text="{Binding MaskingLevel, StringFormat=' = {0:F0}'}" />
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <Slider Value="{Binding MaskingLevel}" Margin="10,0,10,5" Maximum="{Binding SelectedTest.MaximumLevel}" Minimum="{Binding SelectedTest.MinimumLevel}" MinimumTrackColor="Red" ThumbColor="Red"/>
            </VerticalStackLayout>

            <VerticalStackLayout x:Name="BackgroundLevelControl">
                <Label HorizontalOptions="Center" Margin="0,5,0,0">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding BackgroundLevelTitle}" />
                            <Span Text="{Binding BackgroundLevel, StringFormat=' = {0:F0}'}" />
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <Slider Value="{Binding BackgroundLevel}" Margin="10,0,10,5" Maximum="{Binding SelectedTest.MaximumLevel}" Minimum="{Binding SelectedTest.MinimumLevel}" MinimumTrackColor="Pink" ThumbColor="Pink"/>
            </VerticalStackLayout>

            <Frame x:Name="UseContralateralMaskingControl" BackgroundColor="WhiteSmoke"  BorderColor="Black" Padding="10,10,10,10" Margin="0,5,0,0">
                <VerticalStackLayout Margin="0,0,0,0" Padding="0,0,0,0">
                    <HorizontalStackLayout>
                        <Label Text="{Binding UseContralateralMaskingTitle}" VerticalOptions="Center" WidthRequest="170" Margin="0,5,0,0" />
                        <Switch x:Name="UseContralateralMasking_Switch" IsToggled="{Binding UseContralateralMasking}" Toggled="UseContralateralMaskingControl_Switch_Toggled" Margin="0,5,0,0" />
                    </HorizontalStackLayout>

                    <HorizontalStackLayout x:Name="LockSpeechLevelToContralateralMaskingControl">
                        <Label Text="{Binding LockContralateralMaskingTitle}" VerticalOptions="Center" HorizontalOptions="End" HorizontalTextAlignment="Center" WidthRequest="170" Margin="0,0,0,5" />
                        <Switch x:Name="LockSpeechLevelToContralateralMasking_Switch" VerticalOptions="Center" Margin="0,0,0,5" />
                    </HorizontalStackLayout>

                    <VerticalStackLayout x:Name="ContralateralMaskingLevelControl">
                        <Label HorizontalOptions="Center" Margin="0,5,0,0">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{Binding ContralateralMaskingLevelTitle}" />
                                    <Span Text="{Binding ContralateralMaskingLevel, StringFormat=' = {0:F0}'}" />
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Slider Value="{Binding ContralateralMaskingLevel}" Margin="10,0,10,0" Maximum="{Binding SelectedTest.MaximumLevel}" Minimum="{Binding SelectedTest.MinimumLevel}" MinimumTrackColor="DarkSlateGray"  ThumbColor="DarkSlateGray"/>
                    </VerticalStackLayout>

                </VerticalStackLayout>
            </Frame>
            

            <HorizontalStackLayout x:Name="UsePhaseAudiometryControl">
                <Label Text="{Binding UsePhaseAudiometryTitle}" VerticalOptions="Center" WidthRequest="170" Margin="0,5,0,5" />
                <Switch x:Name="UsePhaseAudiometry_Switch" Toggled="UsePhaseAudiometry_Switch_Toggled" IsToggled="{Binding UsePhaseAudiometry}" Margin="0,5,0,5" />
            </HorizontalStackLayout>

            <Picker x:Name="AvailablePhaseAudiometryTypes_Picker"  Title="{Binding SelectedPhaseAudiometryTypeTitle}" ItemsSource="{Binding SelectedTest.AvailablePhaseAudiometryTypes}" SelectedItem="{Binding SelectedPhaseAudiometryType}" MinimumWidthRequest="160" HorizontalOptions="Start" Margin="0,10,0,10"/>

            <Frame x:Name="PreListenControl" BackgroundColor="WhiteSmoke"  BorderColor="Black" Padding="10,10,10,10" Margin="0,5,0,0">

                <VerticalStackLayout>
                    <Label Text="{Binding PreListenTitle}" VerticalOptions="Center" HorizontalOptions="Start"  Margin="0,0,0,5" />
                    <Grid ColumnDefinitions="*, *">
                        <Button x:Name="PreListenPlayButton" Grid.Column="0" Text="{Binding PreListenPlayButtonTitle}"  Clicked="PreListenPlayButton_Clicked" HorizontalOptions="FillAndExpand" Margin="0,0,1,0"/>
                        <Button x:Name="PreListenStopButton" Grid.Column="1" Text="{Binding PreListenStopButtonTitle}"  Clicked="PreListenStopButton_Clicked" HorizontalOptions="FillAndExpand" Margin="1,0,0,0"/>
                    </Grid>
                    <Frame Margin="0,5,0,5" Padding="0,0,0,0">
                        <Label x:Name="PreListenSpellingLabel" VerticalOptions="Center" HorizontalOptions="Center" FontAutoScalingEnabled="True" FontSize="Large"/>
                    </Frame>
                </VerticalStackLayout>
            </Frame>

            <!--<Ellipse Stroke="Aqua"  WidthRequest="120" HeightRequest="120"  StrokeDashArray="46" StrokeLineCap="Round"  StrokeThickness="4" Margin="2,2,2,2"  >  </Ellipse>-->

        </VerticalStackLayout>

    </ScrollView>

</ContentView>
